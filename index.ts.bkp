import express from 'express';
import jwt from 'jsonwebtoken';
import dotenv from 'dotenv';
import { Response, Request, NextFunction } from 'express-serve-static-core';

dotenv.config();


const app = express();
app.use(express.json());
const PORT = 8000;

const orders = [
    {
        id: 1,
        value: 32.4,
        username: "gustavovalle23"
    },
    {
        id: 2,
        value: 12.9,
        username: "gustavovalle"
    }
]


const authenticateToken = (req: Request, res: Response, next: NextFunction) => {
    const authHeader = req.headers['authorization'];
    const token = authHeader && authHeader.split(' ')[1];
    if (!token) return res.sendStatus(401);
    const secretKey = process.env.ACCESS_TOKEN_SECRET || 'default-token';
    jwt.verify(token, secretKey, (err, user) => {
        if (err) {
            console.log(err);
            return res.sendStatus(403);
        } 
        req.body = user;
        next()
    })
}


app.get('/', authenticateToken, async (req, res) => {
    const ordersFiltered = orders.filter(order => order.username === req.body.name);
    res.send(ordersFiltered);
})

app.post('/login', (req, res) => {
    const username = req.body.username;
    const user = { name: username };
    const secretKey = process.env.ACCESS_TOKEN_SECRET || 'default-token';
    const accessToken = jwt.sign(user, secretKey);
    res.json({ accessToken: accessToken });
})

app.post('/register', (req, res) => {

})




app.listen(PORT, () => {
    console.log(`> [server] Server is running at http://localhost:${PORT}`)
})